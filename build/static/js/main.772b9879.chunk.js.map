{"version":3,"sources":["Snake.js","Food.js","App.js","reportWebVitals.js","index.js"],"names":["Snake","snakeDots","map","dot","i","style","left","top","className","Food","foodDots","getDirection","e","keyCode","App","getRandomFoodDot","Math","floor","random","useState","setSnakeDots","setFoodDots","val","direction","setDirection","lastDirection","setLastDirection","speed","setSpeed","gameOver","setGameOver","startGame","setStartGame","useEffect","interval","setInterval","dots","head","length","push","shift","moveSnake","checkIfCollapsed","checkIfOutOfBorders","checkIfEat","clearInterval","keyPressHandler","document","addEventListener","removeEventListener","food","extendSnake","newSnake","unshift","console","log","onGameOver","snake","pop","forEach","Button","variant","color","endIcon","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.772b9879.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Snake({ snakeDots }) {\n\treturn (\n\t\t<div>\n\t\t\t{snakeDots.map((dot, i) => {\n\t\t\t\tconst style = {\n\t\t\t\t\tleft: `${dot[0]}%`,\n\t\t\t\t\ttop: `${dot[1]}%`,\n\t\t\t\t};\n\t\t\t\treturn <div className=\"snake__dot\" key={i} style={style}></div>;\n\t\t\t})}\n\t\t</div>\n\t);\n}\n\nexport default Snake;\n","import React from \"react\";\n\nfunction Food({ foodDots }) {\n\tconst style = {\n\t\tleft: `${foodDots[0]}%`,\n\t\ttop: `${foodDots[1]}%`,\n\t};\n\n\treturn <div className=\"snake__food\" style={style}></div>;\n}\n\nexport default Food;\n","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Snake from \"./Snake\";\nimport Food from \"./Food\";\nimport Button from \"@material-ui/core/Button\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport PauseIcon from \"@material-ui/icons/Pause\";\n\nconst getDirection = (e) => {\n\tswitch (e.keyCode) {\n\t\tcase 38:\n\t\t\treturn \"UP\";\n\t\tcase 40:\n\t\t\treturn \"DOWN\";\n\t\tcase 37:\n\t\t\treturn \"LEFT\";\n\t\tcase 39:\n\t\t\treturn \"RIGHT\";\n\t\tdefault:\n\t\t\treturn;\n\t}\n};\n\nfunction App() {\n\tconst getRandomFoodDot = () => {\n\t\tlet min = 1;\n\t\tlet max = 98;\n\n\t\tlet x = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n\t\tlet y = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n\n\t\treturn [x, y];\n\t};\n\n\tconst [snakeDots, setSnakeDots] = useState([\n\t\t[0, 0],\n\t\t[2, 0],\n\t]);\n\tconst [foodDots, setFoodDots] = useState(getRandomFoodDot());\n\tconst [direction, setDirection] = useState({ val: \"RIGHT\" });\n\tconst [lastDirection, setLastDirection] = useState();\n\tconst [speed, setSpeed] = useState(200);\n\tconst [gameOver, setGameOver] = useState(true);\n\tconst [startGame, setStartGame] = useState(false);\n\n\tconst moveSnake = () => {\n\t\tlet dots = [...snakeDots];\n\t\tlet head = dots[dots.length - 1];\n\t\tswitch (direction.val) {\n\t\t\tcase \"UP\":\n\t\t\t\tsetLastDirection(direction);\n\t\t\t\thead = [head[0], head[1] - 2];\n\t\t\t\tdots.push(head);\n\t\t\t\tdots.shift();\n\t\t\t\tbreak;\n\t\t\tcase \"DOWN\":\n\t\t\t\tsetLastDirection(direction);\n\t\t\t\thead = [head[0], head[1] + 2];\n\t\t\t\tdots.push(head);\n\t\t\t\tdots.shift();\n\t\t\t\tbreak;\n\t\t\tcase \"LEFT\":\n\t\t\t\tsetLastDirection(direction);\n\t\t\t\thead = [head[0] - 2, head[1]];\n\t\t\t\tdots.push(head);\n\t\t\t\tdots.shift();\n\t\t\t\tbreak;\n\t\t\tcase \"RIGHT\":\n\t\t\t\tsetLastDirection(direction);\n\t\t\t\thead = [head[0] + 2, head[1]];\n\t\t\t\tdots.push(head);\n\t\t\t\tdots.shift();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tsetDirection(lastDirection);\n\t\t\t\tbreak;\n\t\t}\n\t\tsetSnakeDots(dots);\n\t};\n\n\tuseEffect(() => {\n\t\tif (gameOver) {\n\t\t\tconst interval = setInterval(() => {\n\t\t\t\tmoveSnake();\n\t\t\t\tcheckIfCollapsed();\n\t\t\t\tcheckIfOutOfBorders();\n\t\t\t\tcheckIfEat();\n\t\t\t}, speed);\n\t\t\treturn () => clearInterval(interval);\n\t\t}\n\t}, [snakeDots, gameOver]);\n\n\tuseEffect(() => {\n\t\tconst keyPressHandler = (e) => {\n\t\t\tsetDirection({ val: getDirection(e) });\n\t\t};\n\t\tdocument.addEventListener(\"keydown\", keyPressHandler);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"keydown\", keyPressHandler);\n\t\t};\n\t}, []);\n\n\tconst checkIfEat = () => {\n\t\tlet head = snakeDots[snakeDots.length - 1];\n\t\tlet food = foodDots;\n\t\tif (head[0] == food[0] && head[1] == food[1]) {\n\t\t\tsetFoodDots(getRandomFoodDot);\n\t\t\textendSnake();\n\t\t\t// increseSpeed();\n\t\t}\n\t};\n\n\tconst extendSnake = () => {\n\t\tlet newSnake = [...snakeDots];\n\t\tnewSnake.unshift([]);\n\t\tsetSnakeDots(newSnake);\n\t};\n\n\t// we need increse speed?\n\tconst increseSpeed = () => {\n\t\tsetSpeed(speed - 5);\n\t};\n\n\tconst checkIfOutOfBorders = () => {\n\t\tlet head = snakeDots[snakeDots.length - 1];\n\t\tconsole.log(head);\n\t\tif (head[0] == 100 || head[1] == 100 || head[0] < 0 || head[1] < 0) {\n\t\t\tonGameOver();\n\t\t}\n\t};\n\n\tconst checkIfCollapsed = () => {\n\t\tlet snake = [...snakeDots];\n\t\tlet head = snake[snake.length - 1];\n\t\tsnake.pop();\n\t\tsnake.forEach((dot) => {\n\t\t\tif (head[0] == dot[0] && head[1] == dot[1]) {\n\t\t\t\tonGameOver();\n\t\t\t}\n\t\t});\n\t};\n\n\tconst onGameOver = () => {\n\t\tsetSpeed(200);\n\t\tsetDirection({ val: \"RIGHT\" });\n\t\tsetLastDirection({ direction });\n\t\tsetGameOver(false);\n\t\tsetSnakeDots([\n\t\t\t[0, 0],\n\t\t\t[2, 0],\n\t\t]);\n\t};\n\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t<div className=\"snake\">\n\t\t\t\t<div className=\"snake__game\">\n\t\t\t\t\t<Snake snakeDots={snakeDots} />\n\t\t\t\t\t<Food foodDots={foodDots} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"app__buttons\">\n\t\t\t\t{startGame ? (\n\t\t\t\t\t\"\"\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName=\"app__button\"\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tendIcon={<PlayArrowIcon>Start</PlayArrowIcon>}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetStartGame(true);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tPLAY\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t\t{gameOver ? (\n\t\t\t\t\t\"\"\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName=\"app__button\"\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tendIcon={<PlayArrowIcon>Start</PlayArrowIcon>}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetGameOver(true);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tPLAY AGAIN\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<p className=\"app__gameOver\">GAME OVER</p>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}