{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Dimitrije/Desktop/FRONTEND/REACT PROJECTS/Snake-Game-Github/snake-game/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Snake from \"./Snake\";\nimport Food from \"./Food\";\nimport Button from \"@material-ui/core/Button\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport PauseIcon from \"@material-ui/icons/Pause\";\n\nconst getDirection = e => {\n  switch (e.keyCode) {\n    case 38:\n      return \"UP\";\n\n    case 40:\n      return \"DOWN\";\n\n    case 37:\n      return \"LEFT\";\n\n    case 39:\n      return \"RIGHT\";\n\n    default:\n      return;\n  }\n};\n\nfunction App() {\n  _s();\n\n  const getRandomFoodDot = () => {\n    let min = 1;\n    let max = 98;\n    let x = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n    let y = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n    return [x, y];\n  };\n\n  const [snakeDots, setSnakeDots] = useState([[0, 0], [2, 0]]);\n  const [foodDots, setFoodDots] = useState(getRandomFoodDot());\n  const [direction, setDirection] = useState({\n    val: \"RIGHT\"\n  });\n  const [lastDirection, setLastDirection] = useState();\n  const [speed, setSpeed] = useState(200);\n\n  const moveSnake = () => {\n    let dots = [...snakeDots];\n    let head = dots[dots.length - 1];\n\n    switch (direction.val) {\n      case \"UP\":\n        setLastDirection(direction);\n        head = [head[0], head[1] - 2];\n        dots.push(head);\n        dots.shift();\n        break;\n\n      case \"DOWN\":\n        setLastDirection(direction);\n        head = [head[0], head[1] + 2];\n        dots.push(head);\n        dots.shift();\n        break;\n\n      case \"LEFT\":\n        setLastDirection(direction);\n        head = [head[0] - 2, head[1]];\n        dots.push(head);\n        dots.shift();\n        break;\n\n      case \"RIGHT\":\n        setLastDirection(direction);\n        head = [head[0] + 2, head[1]];\n        dots.push(head);\n        dots.shift();\n        break;\n\n      default:\n        setDirection(lastDirection);\n        break;\n    }\n\n    setSnakeDots(dots);\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      moveSnake();\n      checkIfCollapsed();\n      checkIfOutOfBorders();\n      checkIfEat();\n    }, speed);\n    return () => clearInterval(interval);\n  }, [snakeDots]);\n  useEffect(() => {\n    const keyPressHandler = e => {\n      setDirection({\n        val: getDirection(e)\n      });\n    };\n\n    document.addEventListener(\"keydown\", keyPressHandler);\n    return () => {\n      document.removeEventListener(\"keydown\", keyPressHandler);\n    };\n  }, []);\n\n  const checkIfEat = () => {\n    let head = snakeDots[snakeDots.length - 1];\n    let food = foodDots;\n\n    if (head[0] == food[0] && head[1] == food[1]) {\n      setFoodDots(getRandomFoodDot);\n      extendSnake(); // increseSpeed();\n    }\n  };\n\n  const extendSnake = () => {\n    let newSnake = [...snakeDots];\n    newSnake.unshift([]);\n    setSnakeDots(newSnake);\n  }; // // we need increse speed?\n  // const increseSpeed = () => {\n  // \tif (speed > 10) {\n  // \t\tsetSpeed(speed - 10);\n  // \t}\n  // };\n\n\n  const checkIfOutOfBorders = () => {\n    let head = snakeDots[snakeDots.length - 1];\n\n    if (head[0] == 100 || head[1] == 100 || head[0] < 0 || head[1] < 0) {\n      onGameOver();\n    }\n  };\n\n  const checkIfCollapsed = () => {\n    let snake = [...snakeDots];\n    let head = snake[snake.length - 1];\n    snake.pop();\n    snake.forEach(dot => {\n      if (head[0] == dot[0] && head[1] == dot[1]) {\n        onGameOver();\n      }\n    });\n  };\n\n  const onGameOver = () => {\n    setSpeed(50);\n    setDirection({\n      val: \"RIGHT\"\n    });\n    setLastDirection({\n      direction\n    });\n    setSnakeDots([[0, 0], [2, 0]]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"snake\",\n      children: /*#__PURE__*/_jsxDEV(Food, {\n        foodDots: foodDots\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__buttons\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        endIcon: /*#__PURE__*/_jsxDEV(PauseIcon, {\n          children: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 15\n        }, this),\n        children: \"PAUSE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        endIcon: /*#__PURE__*/_jsxDEV(PlayArrowIcon, {\n          children: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 15\n        }, this),\n        children: \"START\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: snakeDots.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"UobskEhMvfK5ygLjAHry1jj6q+0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Dimitrije/Desktop/FRONTEND/REACT PROJECTS/Snake-Game-Github/snake-game/src/App.js"],"names":["useEffect","useState","Snake","Food","Button","PlayArrowIcon","PauseIcon","getDirection","e","keyCode","App","getRandomFoodDot","min","max","x","Math","floor","random","y","snakeDots","setSnakeDots","foodDots","setFoodDots","direction","setDirection","val","lastDirection","setLastDirection","speed","setSpeed","moveSnake","dots","head","length","push","shift","interval","setInterval","checkIfCollapsed","checkIfOutOfBorders","checkIfEat","clearInterval","keyPressHandler","document","addEventListener","removeEventListener","food","extendSnake","newSnake","unshift","onGameOver","snake","pop","forEach","dot"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Snake from \"./Snake\";\nimport Food from \"./Food\";\nimport Button from \"@material-ui/core/Button\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport PauseIcon from \"@material-ui/icons/Pause\";\n\nconst getDirection = (e) => {\n\tswitch (e.keyCode) {\n\t\tcase 38:\n\t\t\treturn \"UP\";\n\t\tcase 40:\n\t\t\treturn \"DOWN\";\n\t\tcase 37:\n\t\t\treturn \"LEFT\";\n\t\tcase 39:\n\t\t\treturn \"RIGHT\";\n\t\tdefault:\n\t\t\treturn;\n\t}\n};\n\nfunction App() {\n\tconst getRandomFoodDot = () => {\n\t\tlet min = 1;\n\t\tlet max = 98;\n\n\t\tlet x = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n\t\tlet y = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n\n\t\treturn [x, y];\n\t};\n\n\tconst [snakeDots, setSnakeDots] = useState([\n\t\t[0, 0],\n\t\t[2, 0],\n\t]);\n\tconst [foodDots, setFoodDots] = useState(getRandomFoodDot());\n\tconst [direction, setDirection] = useState({ val: \"RIGHT\" });\n\tconst [lastDirection, setLastDirection] = useState();\n\tconst [speed, setSpeed] = useState(200);\n\n\tconst moveSnake = () => {\n\t\tlet dots = [...snakeDots];\n\t\tlet head = dots[dots.length - 1];\n\t\tswitch (direction.val) {\n\t\t\tcase \"UP\":\n\t\t\t\tsetLastDirection(direction);\n\t\t\t\thead = [head[0], head[1] - 2];\n\t\t\t\tdots.push(head);\n\t\t\t\tdots.shift();\n\t\t\t\tbreak;\n\t\t\tcase \"DOWN\":\n\t\t\t\tsetLastDirection(direction);\n\t\t\t\thead = [head[0], head[1] + 2];\n\t\t\t\tdots.push(head);\n\t\t\t\tdots.shift();\n\t\t\t\tbreak;\n\t\t\tcase \"LEFT\":\n\t\t\t\tsetLastDirection(direction);\n\t\t\t\thead = [head[0] - 2, head[1]];\n\t\t\t\tdots.push(head);\n\t\t\t\tdots.shift();\n\t\t\t\tbreak;\n\t\t\tcase \"RIGHT\":\n\t\t\t\tsetLastDirection(direction);\n\t\t\t\thead = [head[0] + 2, head[1]];\n\t\t\t\tdots.push(head);\n\t\t\t\tdots.shift();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tsetDirection(lastDirection);\n\t\t\t\tbreak;\n\t\t}\n\t\tsetSnakeDots(dots);\n\t};\n\n\tuseEffect(() => {\n\t\tconst interval = setInterval(() => {\n\t\t\tmoveSnake();\n\t\t\tcheckIfCollapsed();\n\t\t\tcheckIfOutOfBorders();\n\t\t\tcheckIfEat();\n\t\t}, speed);\n\t\treturn () => clearInterval(interval);\n\t}, [snakeDots]);\n\n\tuseEffect(() => {\n\t\tconst keyPressHandler = (e) => {\n\t\t\tsetDirection({ val: getDirection(e) });\n\t\t};\n\t\tdocument.addEventListener(\"keydown\", keyPressHandler);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"keydown\", keyPressHandler);\n\t\t};\n\t}, []);\n\n\tconst checkIfEat = () => {\n\t\tlet head = snakeDots[snakeDots.length - 1];\n\t\tlet food = foodDots;\n\t\tif (head[0] == food[0] && head[1] == food[1]) {\n\t\t\tsetFoodDots(getRandomFoodDot);\n\t\t\textendSnake();\n\t\t\t// increseSpeed();\n\t\t}\n\t};\n\n\tconst extendSnake = () => {\n\t\tlet newSnake = [...snakeDots];\n\t\tnewSnake.unshift([]);\n\t\tsetSnakeDots(newSnake);\n\t};\n\n\t// // we need increse speed?\n\t// const increseSpeed = () => {\n\t// \tif (speed > 10) {\n\t// \t\tsetSpeed(speed - 10);\n\t// \t}\n\t// };\n\n\tconst checkIfOutOfBorders = () => {\n\t\tlet head = snakeDots[snakeDots.length - 1];\n\t\tif (head[0] == 100 || head[1] == 100 || head[0] < 0 || head[1] < 0) {\n\t\t\tonGameOver();\n\t\t}\n\t};\n\n\tconst checkIfCollapsed = () => {\n\t\tlet snake = [...snakeDots];\n\t\tlet head = snake[snake.length - 1];\n\t\tsnake.pop();\n\t\tsnake.forEach((dot) => {\n\t\t\tif (head[0] == dot[0] && head[1] == dot[1]) {\n\t\t\t\tonGameOver();\n\t\t\t}\n\t\t});\n\t};\n\n\tconst onGameOver = () => {\n\t\tsetSpeed(50);\n\t\tsetDirection({ val: \"RIGHT\" });\n\t\tsetLastDirection({ direction });\n\t\tsetSnakeDots([\n\t\t\t[0, 0],\n\t\t\t[2, 0],\n\t\t]);\n\t};\n\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t<div className=\"snake\">\n\t\t\t\t{/* <Snake snakeDots={snakeDots} /> */}\n\t\t\t\t<Food foodDots={foodDots} />\n\t\t\t</div>\n\t\t\t<div className=\"app__buttons\">\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tendIcon={<PauseIcon>Start</PauseIcon>}\n\t\t\t\t>\n\t\t\t\t\tPAUSE\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tendIcon={<PlayArrowIcon>Start</PlayArrowIcon>}\n\t\t\t\t>\n\t\t\t\t\tSTART\n\t\t\t\t</Button>\n\t\t\t\t<p>{snakeDots.length}</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}