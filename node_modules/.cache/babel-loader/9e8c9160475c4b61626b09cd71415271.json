{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Dimitrije/Desktop/FRONTEND/REACT PROJECTS/Snake-Game-Github/snake-game/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Snake from \"./Snake\";\nimport Food from \"./Food\";\n\nconst getDirection = e => {\n  switch (e.keyCode) {\n    case 38:\n      return \"UP\";\n\n    case 40:\n      return \"DOWN\";\n\n    case 37:\n      return \"LEFT\";\n\n    case 39:\n      return \"RIGHT\";\n\n    default:\n      return \"\";\n  }\n};\n\nfunction App() {\n  _s();\n\n  const getRandomFoodDot = () => {\n    let min = 1;\n    let max = 98;\n    let x = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n    let y = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n    return [x, y];\n  };\n\n  const [snakeDots, setSnakeDots] = useState([[0, 0], [2, 0]]);\n  const [foodDots, setFoodDots] = useState(getRandomFoodDot());\n  const [direction, setDirection] = useState({\n    val: \"\"\n  });\n\n  const switchDirection = () => {\n    let dots = [...snakeDots];\n    let head = dots[dots.length - 1];\n\n    switch (direction.val) {\n      case \"UP\":\n        head = [head[0], head[1] - 2];\n        dots.push(head);\n        dots.shift();\n        break;\n\n      case \"DOWN\":\n        head = [head[0], head[1] + 2];\n        dots.push(head);\n        dots.shift();\n        break;\n\n      case \"LEFT\":\n        head = [head[0] - 2, head[1]];\n        dots.push(head);\n        dots.shift();\n        break;\n\n      case \"RIGHT\":\n        head = [head[0] + 2, head[1]];\n        dots.push(head);\n        dots.shift();\n        break;\n\n      default:\n        // add here last direction\n        break;\n    }\n\n    setSnakeDots(dots);\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      switchDirection(); // adding new head\n      // removing last dot\n    }, 200);\n    return () => clearInterval(interval);\n  }, [snakeDots]);\n  useEffect(() => {\n    const keyPressHandler = e => {\n      setDirection({\n        val: getDirection(e)\n      });\n    };\n\n    document.addEventListener(\"keydown\", keyPressHandler);\n    return () => {\n      document.removeEventListener(\"keydown\", keyPressHandler);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"snake\",\n      children: [/*#__PURE__*/_jsxDEV(Snake, {\n        snakeDots: snakeDots\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Food, {\n        foodDots: foodDots\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"/xUA1mAyV1xmIVRwa1vUUj39jR4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Dimitrije/Desktop/FRONTEND/REACT PROJECTS/Snake-Game-Github/snake-game/src/App.js"],"names":["useEffect","useState","Snake","Food","getDirection","e","keyCode","App","getRandomFoodDot","min","max","x","Math","floor","random","y","snakeDots","setSnakeDots","foodDots","setFoodDots","direction","setDirection","val","switchDirection","dots","head","length","push","shift","interval","setInterval","clearInterval","keyPressHandler","document","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Snake from \"./Snake\";\nimport Food from \"./Food\";\n\nconst getDirection = (e) => {\n\tswitch (e.keyCode) {\n\t\tcase 38:\n\t\t\treturn \"UP\";\n\t\tcase 40:\n\t\t\treturn \"DOWN\";\n\t\tcase 37:\n\t\t\treturn \"LEFT\";\n\t\tcase 39:\n\t\t\treturn \"RIGHT\";\n\t\tdefault:\n\t\t\treturn \"\";\n\t}\n};\n\nfunction App() {\n\tconst getRandomFoodDot = () => {\n\t\tlet min = 1;\n\t\tlet max = 98;\n\n\t\tlet x = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n\t\tlet y = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n\n\t\treturn [x, y];\n\t};\n\n\tconst [snakeDots, setSnakeDots] = useState([\n\t\t[0, 0],\n\t\t[2, 0],\n\t]);\n\tconst [foodDots, setFoodDots] = useState(getRandomFoodDot());\n\tconst [direction, setDirection] = useState({ val: \"\" });\n\n\tconst switchDirection = () => {\n\t\tlet dots = [...snakeDots];\n\t\tlet head = dots[dots.length - 1];\n\t\tswitch (direction.val) {\n\t\t\tcase \"UP\":\n\t\t\t\thead = [head[0], head[1] - 2];\n\t\t\t\tdots.push(head);\n\t\t\t\tdots.shift();\n\t\t\t\tbreak;\n\t\t\tcase \"DOWN\":\n\t\t\t\thead = [head[0], head[1] + 2];\n\t\t\t\tdots.push(head);\n\t\t\t\tdots.shift();\n\t\t\t\tbreak;\n\t\t\tcase \"LEFT\":\n\t\t\t\thead = [head[0] - 2, head[1]];\n\t\t\t\tdots.push(head);\n\t\t\t\tdots.shift();\n\t\t\t\tbreak;\n\t\t\tcase \"RIGHT\":\n\t\t\t\thead = [head[0] + 2, head[1]];\n\t\t\t\tdots.push(head);\n\t\t\t\tdots.shift();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t// add here last direction\n\t\t\t\tbreak;\n\t\t}\n\t\tsetSnakeDots(dots);\n\t};\n\n\tuseEffect(() => {\n\t\tconst interval = setInterval(() => {\n\t\t\tswitchDirection();\n\t\t\t// adding new head\n\t\t\t// removing last dot\n\t\t}, 200);\n\t\treturn () => clearInterval(interval);\n\t}, [snakeDots]);\n\n\tuseEffect(() => {\n\t\tconst keyPressHandler = (e) => {\n\t\t\tsetDirection({ val: getDirection(e) });\n\t\t};\n\t\tdocument.addEventListener(\"keydown\", keyPressHandler);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"keydown\", keyPressHandler);\n\t\t};\n\t}, []);\n\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t<div className=\"snake\">\n\t\t\t\t<Snake snakeDots={snakeDots} />\n\t\t\t\t<Food foodDots={foodDots} />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}