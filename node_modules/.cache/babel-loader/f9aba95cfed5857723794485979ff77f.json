{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Dimitrije/Desktop/FRONTEND/REACT PROJECTS/Snake-Game-Github/snake-game/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Snake from \"./Snake\";\nimport Food from \"./Food\";\n\nfunction App() {\n  _s();\n\n  const [count, setCount] = useState(0); // Similar to componentDidMount and componentDidUpdate:\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    document.title = `You clicked ${count} times`;\n  });\n\n  const getRandomFoodDot = () => {\n    let min = 1;\n    let max = 98;\n    let x = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n    let y = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n    return [x, y];\n  };\n\n  const [snakeDots, setSnakeDots] = useState([[0, 0], [2, 0]]);\n  const [foodDots, setFoodDots] = useState(getRandomFoodDot());\n  const [direction, setDirection] = useState(\"RIGHT\");\n  const [speed, setSpeed] = useState(1500);\n\n  const checkKeyPress = e => {\n    switch (e.keyCode) {\n      case 38:\n        setDirection(\"UP\");\n        break;\n\n      case 40:\n        setDirection(\"DOWN\");\n        break;\n\n      case 37:\n        setDirection(\"LEFT\");\n        break;\n\n      case 39:\n        setDirection(\"RIGHT\");\n        break;\n\n      default:\n        setDirection(\"\");\n        break;\n    }\n  };\n\n  const moveSnake = () => {\n    let dots = [...snakeDots];\n    let head = dots[dots.length - 1];\n\n    switch (direction) {\n      case \"UP\":\n        head = [head[0], head[1] - 2];\n        break;\n\n      case \"DOWN\":\n        head = [head[0], head[1] + 2];\n        break;\n\n      case \"LEFT\":\n        head = [head[0] - 2, head[1]];\n        break;\n\n      case \"RIGHT\":\n        head = [head[0] + 2, head[1]];\n      // add default case\n    } // adding new head\n\n\n    dots.push(head); // removing last dot\n\n    dots.shift();\n    console.log(dots);\n  }; // useEffect(() => {\n  // \twindow.addEventListener(\"keydown\", checkKeyPress);\n  // \tconsole.log(\"test\");\n  // \tsetInterval(moveSnake, speed);\n  // }, []);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"snake\",\n      children: [/*#__PURE__*/_jsxDEV(Snake, {\n        snakeDots: snakeDots\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Food, {\n        foodDots: foodDots\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"2pOVtBETqd7x9aM0MiGQh6AjiEI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Dimitrije/Desktop/FRONTEND/REACT PROJECTS/Snake-Game-Github/snake-game/src/App.js"],"names":["useEffect","useState","Snake","Food","App","count","setCount","document","title","getRandomFoodDot","min","max","x","Math","floor","random","y","snakeDots","setSnakeDots","foodDots","setFoodDots","direction","setDirection","speed","setSpeed","checkKeyPress","e","keyCode","moveSnake","dots","head","length","push","shift","console","log"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Snake from \"./Snake\";\nimport Food from \"./Food\";\n\nfunction App() {\n\tconst [count, setCount] = useState(0);\n\n\t// Similar to componentDidMount and componentDidUpdate:\n\tuseEffect(() => {\n\t\t// Update the document title using the browser API\n\t\tdocument.title = `You clicked ${count} times`;\n\t});\n\n\tconst getRandomFoodDot = () => {\n\t\tlet min = 1;\n\t\tlet max = 98;\n\n\t\tlet x = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n\t\tlet y = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n\n\t\treturn [x, y];\n\t};\n\n\tconst [snakeDots, setSnakeDots] = useState([\n\t\t[0, 0],\n\t\t[2, 0],\n\t]);\n\tconst [foodDots, setFoodDots] = useState(getRandomFoodDot());\n\tconst [direction, setDirection] = useState(\"RIGHT\");\n\tconst [speed, setSpeed] = useState(1500);\n\n\tconst checkKeyPress = (e) => {\n\t\tswitch (e.keyCode) {\n\t\t\tcase 38:\n\t\t\t\tsetDirection(\"UP\");\n\t\t\t\tbreak;\n\t\t\tcase 40:\n\t\t\t\tsetDirection(\"DOWN\");\n\t\t\t\tbreak;\n\t\t\tcase 37:\n\t\t\t\tsetDirection(\"LEFT\");\n\t\t\t\tbreak;\n\t\t\tcase 39:\n\t\t\t\tsetDirection(\"RIGHT\");\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tsetDirection(\"\");\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\tconst moveSnake = () => {\n\t\tlet dots = [...snakeDots];\n\t\tlet head = dots[dots.length - 1];\n\n\t\tswitch (direction) {\n\t\t\tcase \"UP\":\n\t\t\t\thead = [head[0], head[1] - 2];\n\t\t\t\tbreak;\n\t\t\tcase \"DOWN\":\n\t\t\t\thead = [head[0], head[1] + 2];\n\t\t\t\tbreak;\n\t\t\tcase \"LEFT\":\n\t\t\t\thead = [head[0] - 2, head[1]];\n\t\t\t\tbreak;\n\t\t\tcase \"RIGHT\":\n\t\t\t\thead = [head[0] + 2, head[1]];\n\t\t\t// add default case\n\t\t}\n\t\t// adding new head\n\t\tdots.push(head);\n\t\t// removing last dot\n\t\tdots.shift();\n\t\tconsole.log(dots);\n\t};\n\n\t// useEffect(() => {\n\t// \twindow.addEventListener(\"keydown\", checkKeyPress);\n\t// \tconsole.log(\"test\");\n\t// \tsetInterval(moveSnake, speed);\n\t// }, []);\n\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t<div className=\"snake\">\n\t\t\t\t<Snake snakeDots={snakeDots} />\n\t\t\t\t<Food foodDots={foodDots} />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}